// Because FA doesn't have a LESS class (they generate it dynamically so it is not possible to inherit) we create "in hard" a mixin to inherit .fa properties.
.fa() {
  display: inline-block;
  font-family: FontAwesome;
  font-style: normal;
  font-weight: normal;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.scrollbar() {
  ::-webkit-scrollbar {
    -webkit-appearance: none;
    width: 7px;
  }

  ::-webkit-scrollbar-thumb {
    border-radius: 4px;
    background-color: rgba(0,0,0,.5);
    -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5);
  }
}

.background( @r, @g, @b, @opacity ){
  background: rgba(@r, @g, @b, @opacity);
}

.input-placeholder( @color: @white ) {
  &::-webkit-input-placeholder {
    color: @color;
  }
  &:-moz-placeholder {
    color: @color;
  }
  &:-ms-placeholder {
    color: @color;
  }
}

// Box shadows
//-------------------
.shadow-top-bottom() {
  -webkit-box-shadow: 0px 0px 5px rgba(50, 50, 50, 0.2);
  -moz-box-shadow:    0px 0px 5px rgba(50, 50, 50, 0.2);
  box-shadow:         0px 0px 5px rgba(50, 50, 50, 0.2);
}

.shadow-top-bottom-small() {
  -webkit-box-shadow: 0px 0px 5px rgba(50, 50, 50, 0.1);
  -moz-box-shadow:    0px 0px 5px rgba(50, 50, 50, 0.1);
  box-shadow:         0px 0px 5px rgba(50, 50, 50, 0.1);
}

.shadow-bottom-right() {
  -webkit-box-shadow: 0px 2px 1px rgba(50, 50, 50, 0.2);
  -moz-box-shadow:    0px 2px 1px rgba(50, 50, 50, 0.2);
  box-shadow:         0px 2px 1px rgba(50, 50, 50, 0.2);
}

.shadow-bottom() {
  -webkit-box-shadow: 0px 5px 5px rgba(50, 50, 50, 0.5);
  -moz-box-shadow:    0px 5px 5px rgba(50, 50, 50, 0.5);
  box-shadow:         0px 5px 5px rgba(50, 50, 50, 0.5);
}

.shadow-bottom-small() {
  -webkit-box-shadow: 0px 3px 3px rgba(40, 40, 40, 0.2);
  -moz-box-shadow:    0px 3px 3px rgba(40, 40, 40, 0.2);
  box-shadow:         0px 3px 3px rgba(40, 40, 40, 0.2);
}

.shadow-top() {
  -webkit-box-shadow: 0px -3px 26px 0px rgba(50, 50, 50, 0.2);
  -moz-box-shadow: 0px -3px 26px 0px rgba(50, 50, 50, 0.2);
  box-shadow: 0px -3px 26px 0px rgba(50, 50, 50, 0.2);
}

.shadow-top-small() {
  -webkit-box-shadow: 0px -3px 2px 0px rgba(50, 50, 50, 0.24);
  -moz-box-shadow:    0px -3px 2px 0px rgba(50, 50, 50, 0.24);
  box-shadow:         0px -3px 2px 0px rgba(50, 50, 50, 0.24);
}

.shadow-bottom-for-coach-and-admin-box() {
  -webkit-box-shadow: 0px 3px 5px rgba(50, 50, 50, 0.3);
  -moz-box-shadow:    0px 3px 5px rgba(50, 50, 50, 0.3);
  box-shadow:         0px 3px 5px rgba(50, 50, 50, 0.3);
}

// Border-radius:
//-------------------

.border-radius(@radius) {
  -moz-border-radius: @radius; /* Firefox */
  -webkit-border-radius: @radius; /* Safari, Chrome */
  border-radius: @radius; /* CSS3 */
}

.border-left-radius(@radius) {
  .border-top-left-radius(@radius);
  .border-bottom-left-radius(@radius);
}

.border-right-radius(@radius) {
  .border-top-right-radius(@radius);
  .border-bottom-right-radius(@radius);
}

.border-top-radius(@radius) {
  .border-top-left-radius(@radius);
  .border-top-right-radius(@radius);
}

.border-bottom-radius(@radius) {
  .border-bottom-left-radius(@radius);
  .border-bottom-right-radius(@radius);
}

.border-top-left-radius(@radius) {
  -moz-border-top-left-radius: @radius;
  -webkit-border-top-left-radius: @radius;
  border-top-left-radius: @radius;
}

.border-top-right-radius(@radius) {
  -moz-border-top-right-radius: @radius;
  -webkit-border-top-right-radius: @radius;
  border-top-right-radius: @radius;
}

.border-bottom-left-radius(@radius) {
  -moz-border-bottom-left-radius: @radius;
  -webkit-border-bottom-left-radius: @radius;
  border-bottom-left-radius: @radius;
}

.border-bottom-right-radius(@radius) {
  -moz-border-bottom-right-radius: @radius;
  -webkit-border-bottom-right-radius: @radius;
  border-bottom-right-radius: @radius;
}

// Gradient (old)

.gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
  background: @color;
  background: -webkit-gradient(linear,
  left bottom,
  left top,
  color-stop(0, @start),
  color-stop(1, @stop));
  background: -ms-linear-gradient(bottom,
  @start,
  @stop);
  background: -moz-linear-gradient(center bottom,
  @start 0%,
  @stop 100%);
  background: -o-linear-gradient(@stop,
  @start);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}

// Gradient with IE support

.linear-gradient( @dir: top, @start-color: #eee, @end-color: #aaa ) {
  background: -webkit-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: -moz-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: -ms-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: -o-linear-gradient(@dir, @start-color 0%, @end-color 100%);
  background: linear-gradient(@dir, @start-color 0%, @end-color 100%);
  .linear-gradient-ie( @dir, @start-color, @end-color);
}

.linear-gradient-multi( ... ) {
  background-image: -webkit-linear-gradient(@arguments);
  background-image: -moz-linear-gradient(@arguments);
  background-image: -ms-linear-gradient(@arguments);
  background-image: -o-linear-gradient(@arguments);
  background-image: linear-gradient(@arguments);
}

.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = top),
  not ( isstring(@dir) ) and ( @dir >= 225 ) and ( @dir < 315 ),
  not ( isstring(@dir) ) and ( @dir >= -135 ) and ( @dir < -45 ) {
  .linear-gradient-ie-filter(@start-color, @end-color, 0);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = right),
  not ( isstring(@dir) ) and ( @dir >= 135 ) and ( @dir < 225 ),
  not ( isstring(@dir) ) and ( @dir >= -225 ) and ( @dir < -135 ) {
  .linear-gradient-ie-filter(@end-color, @start-color, 1);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = bottom),
  not ( isstring(@dir) ) and ( @dir >= 45 ) and ( @dir < 135 ),
  not ( isstring(@dir) ) and ( @dir >= -315 ) and ( @dir < -225 ) {
  .linear-gradient-ie-filter(@end-color, @start-color, 0);
}
.linear-gradient-ie( @dir, @start-color, @end-color) when (@dir = left),
  not ( isstring(@dir) ) and ( @dir >= 315 ) and ( @dir < 360 ),
  not ( isstring(@dir) ) and ( @dir >= -45 ) and ( @dir < 45 ),
  not ( isstring(@dir) ) and ( @dir < -315 ) and ( @dir >= -360 ) {
  .linear-gradient-ie-filter(@start-color, @end-color, 1);
}

.linear-gradient-ie-filter(@start: #eee, @end: #aaa, @type: 1) {
  @c-start: argb(@start);
  @c-end:   argb(@end);
  filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{c-start}', endColorstr='@{c-end}', GradientType=@{type})";
  -ms-filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{c-start}',endColorstr='@{c-end}',GradientType=@{type})";
}

// Gradient with IE support end

.bordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
  border-top: solid 1px @top-color;
  border-left: solid 1px @left-color;
  border-right: solid 1px @right-color;
  border-bottom: solid 1px @bottom-color;
}

.rounded(@radius: 2px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}

.border-radius (@radius: 4px) {
  -webkit-border-radius: @radius;
  -moz-border-radius:    @radius;
  border-radius:         @radius;

  -moz-background-clip:    padding;
  -webkit-background-clip: padding-box;
  background-clip:         padding-box;
}

.opacity(@opacity: 0.5) {
  -moz-opacity: @opacity;
  -khtml-opacity: @opacity;
  -webkit-opacity: @opacity;
  opacity: @opacity;
  @opperc: @opacity * 100;
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
  filter: ~"alpha(opacity=@{opperc})";
}

.transition-duration(@duration: 0.2s) {
  -moz-transition-duration: @duration;
  -webkit-transition-duration: @duration;
  -o-transition-duration: @duration;
  transition-duration: @duration;
}

.transform(@arguments) {
  -webkit-transform: @arguments;
  -moz-transform: @arguments;
  -o-transform: @arguments;
  -ms-transform: @arguments;
  transform: @arguments;
}

.rotation(@deg:5deg){
  .transform(rotate(@deg));
}

.scale(@ratio:1.5){
  .transform(scale(@ratio));
}

.transition(@properties, @duration:0.2s, @ease:ease-out) {
  -webkit-transition: @properties @duration @ease;
  -moz-transition: @properties @duration @ease;
  -o-transition: @properties @duration @ease;
  transition: @properties @duration @ease;
}

.box-sizing(@sizing: border-box) {
  -ms-box-sizing: @sizing;
  -moz-box-sizing: @sizing;
  -webkit-box-sizing: @sizing;
  box-sizing: @sizing;
}

.user-select(@argument: none) {
  -webkit-user-select: @argument;
  -moz-user-select: @argument;
  -ms-user-select: @argument;
  user-select: @argument;
}

.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
  -moz-column-width: @colwidth;
  -moz-column-count: @colcount;
  -moz-column-gap: @colgap;
  -moz-column-rule-color: @columnRuleColor;
  -moz-column-rule-style: @columnRuleStyle;
  -moz-column-rule-width: @columnRuleWidth;
  -webkit-column-width: @colwidth;
  -webkit-column-count: @colcount;
  -webkit-column-gap: @colgap;
  -webkit-column-rule-color: @columnRuleColor;
  -webkit-column-rule-style: @columnRuleStyle;
  -webkit-column-rule-width: @columnRuleWidth;
  column-width: @colwidth;
  column-count: @colcount;
  column-gap: @colgap;
  column-rule-color: @columnRuleColor;
  column-rule-style: @columnRuleStyle;
  column-rule-width: @columnRuleWidth;
}

.translate(@x:0, @y:0) {
  .transform(translate(@x, @y));
}

.box-shadow(@shadowA, @shadowB:X, ...){
  @props: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
  -webkit-box-shadow: @props;
  -moz-box-shadow: @props;
  -o-box-shadow: @props;
  box-shadow: @props;
}

.background-clip(@argument: padding-box) {
  -moz-background-clip: @argument;
  -webkit-background-clip: @argument;
  background-clip: @argument;
}

.color( @r, @g, @b, @opacity ){
  color: rgba(@r, @g, @b, @opacity);
}

